#+title: Structure and Interpretation of Classical Mechanics

#+subtitle: emacs everywhere
#+date: 2019-07-26

* Chapter 1

This is an example of how we might structure an org-mode file that can export
out to Github flavored Markdown, or to a PDF.

First, let's get some code loaded up and written.

#+begin_src scheme :results none
(load "ch1/utils.scm")

(define (p->r local)
  (let* ((polar-tuple (coordinate local))
         (r (ref polar-tuple 0))
         (phi (ref polar-tuple 1))
         (x (* r (cos phi)))
         (y (* r (sin phi))))
    (up x y)))

(define (spherical->rect local)
  (let* ((spherical-tuple (coordinate local))
         (r (ref spherical-tuple 0))
         (theta (ref spherical-tuple 1))
         (phi (ref spherical-tuple 2)))
    (up (* r (sin theta) (cos phi))
        (* r (sin theta) (sin phi))
        (* r (cos theta)))))
#+end_src

This block will generate a LaTeX version of the code I've supplied:

#+begin_src scheme :results value raw :exports both :cache yes
(->tex-equation
 ((+ (literal-function 'c)
     (D (literal-function 'z)))
  't)
 "eq:masterpiece")
#+end_src

#+RESULTS[b383d2f5d6c252ac04a5f44aaeaec678132b8449]:
\begin{equation}
c\left( t \right) + Dz\left( t \right)
\label{eq:masterpiece}
\end{equation}

You can even reference these with equation numbers, like Equation \eqref{eq:masterpiece} above.

#+begin_src scheme :results value :exports both
(up 1 2 't)
#+end_src

#+RESULTS:
: #|
: (up 1 2 t)
: |#

*** Equations

Here's a test of $a = bc$ and more $$ \alpha_t $$ equations:

And again this is a thing:

\[
e^{i\pi} = -1
\]

\[
\int_0^\infty e^{-x^2} dx = \frac{\sqrt{\pi}}{2}
\]

*** Concluding.

This is the rest of the goods.

* Chapter 2

Testing a second chapter's output.
